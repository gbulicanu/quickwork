name: Release (Tag-Based)
on:
  push:
    tags:
      - "*"
permissions:
  contents: write
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f Pipfile ]; then pipenv install --dev; fi
      - name: Lint
        run: |
          pipenv run pylint $(git ls-files '*.py')
      - name: Test
        run: |
          cp .env.template .env
          pipenv run pytest --cov-config=.coveragerc --cov-report xml --cov=app tests/
      - name: Installer
        run: |
          pipenv run pyinstaller main.py -n qw
          ls -al dist/qw/
      - name: Tar artifact
        run: |
          cd dist
          tar -czvf qw-${{ github.ref_name }}.tar.gz qw
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: qw-${{ github.ref_name }}-${{ matrix.os }}-tar
          path: dist/qw-${{ github.ref_name }}.tar.gz
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: qw-*/qw-*
          tag_name: ${{ github.ref_name }}
          body: "Automated release of ${{ github.ref_name }}."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
